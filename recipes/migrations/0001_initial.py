# Generated by Django 5.2.5 on 2025-08-08 09:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Enter the title of the recipe.', max_length=100)),
                ('description', models.TextField(help_text='Provide a short description of the recipe.')),
                ('cuisine', models.CharField(choices=[('indian', 'Indian'), ('italian', 'Italian'), ('chinese', 'Chinese'), ('mexican', 'Mexican'), ('other', 'Other')], help_text='Select the cuisine category for the recipe.', max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], help_text='Select how difficult the recipe is to prepare.', max_length=10)),
                ('veg_type', models.CharField(choices=[('veg', 'Vegetarian'), ('non_veg', 'Non-Vegetarian'), ('vegan', 'Vegan')], help_text='Choose the vegetarian type of the recipe (veg, non-veg, vegan).', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The date and time when the recipe was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The date and time when the recipe was last updated.')),
                ('author', models.ForeignKey(help_text='The user who created this recipe.', on_delete=django.db.models.deletion.CASCADE, related_name='recipes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the ingredient.', max_length=100)),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity of the ingredient required for the recipe.', max_digits=10)),
                ('unit', models.CharField(choices=[('g', 'Grams'), ('kg', 'Kilograms'), ('ml', 'Milliliters'), ('l', 'Liters'), ('tsp', 'Teaspoon'), ('tbsp', 'Tablespoon'), ('cup', 'Cup'), ('pcs', 'Pieces')], help_text='Measurement unit for the ingredient.', max_length=10)),
                ('optional', models.BooleanField(default=False, help_text='Check if the ingredient is optional.')),
                ('recipe', models.ForeignKey(help_text='The recipe to which this ingredient belongs.', on_delete=django.db.models.deletion.CASCADE, related_name='ingredients', to='recipes.recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the collection.', max_length=100)),
                ('user', models.ForeignKey(help_text='The user who owns this collection.', on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL)),
                ('recipes', models.ManyToManyField(help_text='Recipes included in this collection.', related_name='collections', to='recipes.recipe')),
            ],
        ),
    ]
